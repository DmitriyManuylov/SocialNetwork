CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "Name" character varying(256) NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);

CREATE TABLE "Chats" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    CONSTRAINT "PK_Chats" PRIMARY KEY ("Id")
);

CREATE TABLE "Countries" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    CONSTRAINT "PK_Countries" PRIMARY KEY ("Id")
);

CREATE TABLE "Rooms" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    CONSTRAINT "PK_Rooms" PRIMARY KEY ("Id")
);

CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Cities" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    "CountryId" integer NULL,
    CONSTRAINT "PK_Cities" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Cities_Countries_CountryId" FOREIGN KEY ("CountryId") REFERENCES "Countries" ("Id") ON DELETE RESTRICT
);

CREATE TABLE "SimpleMessages" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderName" text NOT NULL,
    "Text" text NOT NULL,
    "DateTime" timestamp without time zone NOT NULL,
    "RoomId" integer NOT NULL,
    CONSTRAINT "PK_SimpleMessages" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_SimpleMessages_Rooms_RoomId" FOREIGN KEY ("RoomId") REFERENCES "Rooms" ("Id") ON DELETE CASCADE
);

CREATE TABLE "AspNetUsers" (
    "Id" text NOT NULL,
    "FirstName" text NULL,
    "Surname" text NULL,
    "BirthDate" timestamp without time zone NULL,
    "Age" integer NULL,
    "CityId" integer NULL,
    "CountryId" integer NULL,
    "Gender" integer NOT NULL,
    "UserName" character varying(256) NOT NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NOT NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_Cities_CityId" FOREIGN KEY ("CityId") REFERENCES "Cities" ("Id") ON DELETE RESTRICT,
    CONSTRAINT "FK_AspNetUsers_Countries_CountryId" FOREIGN KEY ("CountryId") REFERENCES "Countries" ("Id") ON DELETE RESTRICT
);

CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Dialogs" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ChatId" integer NOT NULL,
    "User1Id" text NOT NULL,
    "User2Id" text NOT NULL,
    CONSTRAINT "PK_Dialogs" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Dialogs_AspNetUsers_User1Id" FOREIGN KEY ("User1Id") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT,
    CONSTRAINT "FK_Dialogs_AspNetUsers_User2Id" FOREIGN KEY ("User2Id") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT,
    CONSTRAINT "FK_Dialogs_Chats_ChatId" FOREIGN KEY ("ChatId") REFERENCES "Chats" ("Id") ON DELETE CASCADE
);

CREATE TABLE "MembershipInChats" (
    "UserId" text NOT NULL,
    "ChatId" integer NOT NULL,
    "DateTime" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_MembershipInChats" PRIMARY KEY ("ChatId", "UserId"),
    CONSTRAINT "FK_MembershipInChats_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_MembershipInChats_Chats_ChatId" FOREIGN KEY ("ChatId") REFERENCES "Chats" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Messages" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderId" text NOT NULL,
    "GroupChatId" integer NOT NULL,
    "DateTime" timestamp without time zone NOT NULL,
    "Text" text NOT NULL,
    CONSTRAINT "PK_Messages" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Messages_AspNetUsers_SenderId" FOREIGN KEY ("SenderId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Messages_Chats_GroupChatId" FOREIGN KEY ("GroupChatId") REFERENCES "Chats" ("Id") ON DELETE CASCADE
);

CREATE TABLE "FriendshipFacts" (
    "InitiatorId" text NOT NULL,
    "InvitedId" text NOT NULL,
    "DialogId" integer NULL,
    "RequestAccepted" boolean NOT NULL,
    "DateOfConclusion" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_FriendshipFacts" PRIMARY KEY ("InitiatorId", "InvitedId"),
    CONSTRAINT "FK_FriendshipFacts_AspNetUsers_InitiatorId" FOREIGN KEY ("InitiatorId") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT,
    CONSTRAINT "FK_FriendshipFacts_AspNetUsers_InvitedId" FOREIGN KEY ("InvitedId") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT,
    CONSTRAINT "FK_FriendshipFacts_Dialogs_DialogId" FOREIGN KEY ("DialogId") REFERENCES "Dialogs" ("Id") ON DELETE RESTRICT
);

INSERT INTO "Chats" ("Id", "Name")
VALUES (1, 'Пинатели мяча в Ростове-на-Дону');
INSERT INTO "Chats" ("Id", "Name")
VALUES (2, 'Швырятели мяча в Саратове');
INSERT INTO "Chats" ("Id", "Name")
VALUES (3, 'Пинатели мяча руками в Сочи');
INSERT INTO "Chats" ("Id", "Name")
VALUES (4, 'Любители погонять в CS "Стрельцы"');
INSERT INTO "Chats" ("Id", "Name")
VALUES (5, 'Клуб любителей World of Tanks - "Не пробил"');
INSERT INTO "Chats" ("Id", "Name")
VALUES (6, 'Собаководы Москвы');

INSERT INTO "Countries" ("Id", "Name")
VALUES (1, 'Россия');
INSERT INTO "Countries" ("Id", "Name")
VALUES (2, 'Белоруссия');
INSERT INTO "Countries" ("Id", "Name")
VALUES (3, 'Германия');
INSERT INTO "Countries" ("Id", "Name")
VALUES (4, 'Китай');
INSERT INTO "Countries" ("Id", "Name")
VALUES (5, 'Франция');

INSERT INTO "Cities" ("Id", "CountryId", "Name")
VALUES (1, 1, 'Санкт-Петербург');
INSERT INTO "Cities" ("Id", "CountryId", "Name")
VALUES (2, 1, 'Москва');
INSERT INTO "Cities" ("Id", "CountryId", "Name")
VALUES (3, 1, 'Ростов-на-Дону');
INSERT INTO "Cities" ("Id", "CountryId", "Name")
VALUES (4, 1, 'Сочи');
INSERT INTO "Cities" ("Id", "CountryId", "Name")
VALUES (5, 1, 'Саратов');
INSERT INTO "Cities" ("Id", "CountryId", "Name")
VALUES (6, 1, 'Иркутск');
INSERT INTO "Cities" ("Id", "CountryId", "Name")
VALUES (7, 2, 'Минск');
INSERT INTO "Cities" ("Id", "CountryId", "Name")
VALUES (8, 2, 'Гомель');
INSERT INTO "Cities" ("Id", "CountryId", "Name")
VALUES (9, 3, 'Берлин');
INSERT INTO "Cities" ("Id", "CountryId", "Name")
VALUES (10, 3, 'Мюнхен');
INSERT INTO "Cities" ("Id", "CountryId", "Name")
VALUES (11, 4, 'Пекин');
INSERT INTO "Cities" ("Id", "CountryId", "Name")
VALUES (12, 4, 'Ухань');
INSERT INTO "Cities" ("Id", "CountryId", "Name")
VALUES (13, 5, 'Париж');

CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");

CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");

CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");

CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");

CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");

CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");

CREATE INDEX "IX_AspNetUsers_CityId" ON "AspNetUsers" ("CityId");

CREATE INDEX "IX_AspNetUsers_CountryId" ON "AspNetUsers" ("CountryId");

CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");

CREATE INDEX "IX_Cities_CountryId" ON "Cities" ("CountryId");

CREATE UNIQUE INDEX "IX_Dialogs_ChatId" ON "Dialogs" ("ChatId");

CREATE INDEX "IX_Dialogs_User1Id" ON "Dialogs" ("User1Id");

CREATE INDEX "IX_Dialogs_User2Id" ON "Dialogs" ("User2Id");

CREATE UNIQUE INDEX "IX_FriendshipFacts_DialogId" ON "FriendshipFacts" ("DialogId");

CREATE INDEX "IX_FriendshipFacts_InvitedId" ON "FriendshipFacts" ("InvitedId");

CREATE INDEX "IX_MembershipInChats_UserId" ON "MembershipInChats" ("UserId");

CREATE INDEX "IX_Messages_GroupChatId" ON "Messages" ("GroupChatId");

CREATE INDEX "IX_Messages_SenderId" ON "Messages" ("SenderId");

CREATE INDEX "IX_SimpleMessages_RoomId" ON "SimpleMessages" ("RoomId");

SELECT setval(
    pg_get_serial_sequence('"Chats"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Chats") + 1,
        nextval(pg_get_serial_sequence('"Chats"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Countries"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Countries") + 1,
        nextval(pg_get_serial_sequence('"Countries"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Cities"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Cities") + 1,
        nextval(pg_get_serial_sequence('"Cities"', 'Id'))),
    false);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20240127223706_InitialPGdb', '5.0.17');

COMMIT;

