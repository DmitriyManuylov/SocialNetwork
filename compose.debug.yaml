# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    hostname: social_network
    container_name: social_network
    build:
      context: ./SocialNetwork
    ports:
      - 80:80
      - 443:443
    volumes:
      - ~/.aspnet/https:/https:ro
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=d15i168
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
#The commented out section below is an example of how to define a PostgreSQL
#database that your application can use. `depends_on` tells Docker Compose to
#start the database before your application. The `db-data` volume persists the
#database data between container restarts. The `db-password` secret is used
#to set the database password. You must create `db/password.txt` and add
#a password of your choosing to it before running `docker compose up`.
    depends_on:
      pgDb:
        condition: service_healthy
  pgDb:
    hostname: pgDb
    container_name: pgDb
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      # - .:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=SocialNetwork
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
   db-data:
secrets:
   db-password:
     file: db/password.txt

